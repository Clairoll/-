{"ast":null,"code":"var _jsxFileName = \"/Users/mwbyd/Desktop/myproject/myCode/antd-test/src/compoentt/table/List.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\n\nclass List extends Component {\n  render() {\n    const columns = [{\n      title: '创建时间',\n      dataIndex: 'createdTime',\n      width: 100,\n      align: 'center'\n    }, {\n      title: '活动名称',\n      dataIndex: 'activeName',\n      width: 50,\n      align: 'center'\n    }, {\n      title: '活动状态',\n      dataIndex: 'activeState',\n      width: 100,\n      align: 'center'\n    }, {\n      title: '活动时间',\n      dataIndex: 'activeTime',\n      width: 50,\n      align: 'center'\n    }];\n    const data = [];\n\n    for (let i = 0; i < 50; i++) {\n      let mounth = Math.floor(Math.random() * 12) + 1;\n      let activeresult = '';\n\n      switch (Math.floor(Math.random() * 3) + 1) {\n        case 1:\n          activeresult = '已结束';\n          break;\n\n        case 2:\n          activeresult = '正在进行';\n          break;\n\n        case 3:\n          activeresult = '尚未开始';\n          break;\n\n        default:\n          activeresult = '没有此活动';\n      }\n\n      data.push({\n        key: i,\n        createdTime: \"201\".concat(Math.floor(Math.random() * 10), \"-\").concat(mounth >= 10 ? mounth : '0' + mounth, \" \"),\n        activeName: \"\\u5546\\u5BB6\\u7B2C\".concat(i + 1, \"\\u4E2A\\u6D3B\\u52A8\"),\n        activeState: activeresult,\n        activeTime: \"201\".concat(Math.floor(Math.random() * 10), \"-\").concat(mounth >= 10 ? mounth : '0' + mounth, \" \")\n      });\n    }\n\n    return React.createElement(Table, {\n      columns: columns,\n      dataSource: data,\n      pagination: {\n        pageSize: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/mwbyd/Desktop/myproject/myCode/antd-test/src/compoentt/table/List.js"],"names":["React","Component","Table","List","render","columns","title","dataIndex","width","align","data","i","mounth","Math","floor","random","activeresult","push","key","createdTime","activeName","activeState","activeTime","pageSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,MAAM,GAAE;AACJ,UAAMC,OAAO,GAAG,CACZ;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,aAFb;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEC,MAAAA,KAAK,EAAE;AAJT,KADY,EAOZ;AACEH,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,YAFb;AAGEC,MAAAA,KAAK,EAAE,EAHT;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAPY,EAaZ;AACEH,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,aAFb;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAbY,EAmBZ;AACIH,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,SAAS,EAAE,YAFf;AAGIC,MAAAA,KAAK,EAAE,EAHX;AAIIC,MAAAA,KAAK,EAAE;AAJX,KAnBY,CAAhB;AAiCE,UAAMC,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,IAA6B,CAA1C;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACD,cAAQH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,IAA4B,CAApC;AACK,aAAK,CAAL;AACIC,UAAAA,YAAY,GAAI,KAAhB;AACA;;AACJ,aAAK,CAAL;AACIA,UAAAA,YAAY,GAAI,MAAhB;AACA;;AACJ,aAAK,CAAL;AACIA,UAAAA,YAAY,GAAI,MAAhB;AACA;;AACJ;AACIA,UAAAA,YAAY,GAAI,OAAhB;AAXT;;AAaCN,MAAAA,IAAI,CAACO,IAAL,CAAU;AACRC,QAAAA,GAAG,EAAEP,CADG;AAERQ,QAAAA,WAAW,eAAQN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAR,cAAwCH,MAAM,IAAE,EAAR,GAAWA,MAAX,GAAkB,MAAIA,MAA9D,MAFH;AAGRQ,QAAAA,UAAU,8BAAQT,CAAC,GAAC,CAAV,uBAHF;AAIRU,QAAAA,WAAW,EAAEL,YAJL;AAKRM,QAAAA,UAAU,eAAOT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAP,cAAuCH,MAAM,IAAE,EAAR,GAAWA,MAAX,GAAkB,MAAIA,MAA7D;AALF,OAAV;AAOD;;AACH,WACG,oBAAC,KAAD;AACC,MAAA,OAAO,EAAEP,OADV;AAEC,MAAA,UAAU,EAAEK,IAFb;AAGC,MAAA,UAAU,EAAE;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAOH;;AAnEwB;;AAqE7B,eAAepB,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Table } from 'antd';\n\nclass List extends Component {\n    render(){\n        const columns = [\n            {\n              title: '创建时间',\n              dataIndex: 'createdTime',\n              width: 100,\n              align: 'center'\n            },\n            {\n              title: '活动名称',\n              dataIndex: 'activeName',\n              width: 50,\n              align: 'center'\n            },\n            {\n              title: '活动状态',\n              dataIndex: 'activeState',\n              width: 100,\n              align: 'center'\n            },\n            {\n                title: '活动时间',\n                dataIndex: 'activeTime',\n                width: 50,\n                align: 'center'\n            },\n            // {\n            //     title: '操作',\n            //     dataIndex: 'operation',\n            //     width: 50,\n            //     align: 'center'\n            // },\n          ];\n          \n          const data = [];\n          for (let i = 0; i < 50; i++) {\n            let mounth = Math.floor(Math.random()*12)+1;\n            let activeresult = '';\n           switch (Math.floor(Math.random()*3)+1) {\n                case 1:\n                    activeresult =  '已结束'\n                    break;\n                case 2:\n                    activeresult =  '正在进行'\n                    break;\n                case 3:\n                    activeresult =  '尚未开始'\n                    break;\n                default:\n                    activeresult =  '没有此活动'\n            }\n            data.push({\n              key: i,\n              createdTime: `201${Math.floor(Math.random()*10)}-${mounth>=10?mounth:'0'+mounth} `,\n              activeName: `商家第${i+1}个活动`,\n              activeState: activeresult,\n              activeTime:`201${Math.floor(Math.random()*10)}-${mounth>=10?mounth:'0'+mounth} `,\n            });\n          }\n        return (\n           <Table \n            columns={columns} \n            dataSource={data} \n            pagination={{ pageSize: 10 }} \n            />\n        )\n    }\n}\nexport default List;"]},"metadata":{},"sourceType":"module"}